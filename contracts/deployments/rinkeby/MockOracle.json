{
  "address": "0xbCa18C815216AbBb70943620Cad96A50B6209B67",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "priceMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setTokPriceMinMax",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_max",
          "type": "uint256"
        }
      ],
      "name": "setEthPriceMinMax",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "priceMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1f7b7499fad269d4d3873c9e689c15f400e73fc0ed4f3b25b3dc5f7a4909f1e2",
  "receipt": {
    "to": null,
    "from": "0xD85A569F3C26f81070544451131c742283360400",
    "contractAddress": "0xbCa18C815216AbBb70943620Cad96A50B6209B67",
    "transactionIndex": 14,
    "gasUsed": "344884",
    "logsBloom": "0x
    "blockHash": "0x5608de08509c5b11068d5ec251c70fc3e9160ce3d0a175b14fcb05b484856eba",
    "transactionHash": "0x1f7b7499fad269d4d3873c9e689c15f400e73fc0ed4f3b25b3dc5f7a4909f1e2",
    "logs": [],
    "blockNumber": 8045801,
    "cumulativeGasUsed": "2555037",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "c3af786fe12b6b771320281cb59e3482",
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.22be8592.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"priceMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setTokPriceMinMax\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setEthPriceMinMax\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"priceMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"price(string)\":{\"details\":\"returns the asset price in USD, 6 decimal digits. Compatible with the Open Price Feed.\"},\"priceMax(string)\":{\"details\":\"get the price of asset in USD, 8 decimal digits. Not needed for now\"},\"priceMin(string)\":{\"details\":\"get the price of asset in ETH, 8 decimal digits.\"},\"setEthPriceMinMax(uint256,uint256)\":{\"details\":\"sets the min and max price of ETH in USD, 6 decimal digits     \"},\"setPrice(string,uint256)\":{\"details\":\"sets the price of the asset in USD, 6 decimal digits     \"},\"setTokPriceMinMax(string,uint256,uint256)\":{\"details\":\"sets the prices Min Max for a specific symbol in ETH, 8 decimal digits     \"}}},\"userdoc\":{\"methods\":{},\"notice\":\"Mock of both price Oracle and min max oracles\"}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockOracle.sol\":\"MockOracle\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMinMaxOracle.sol\":{\"content\":\"pragma solidity 0.5.11;\\n\\ninterface IMinMaxOracle {\\n    //Assuming 8 decimals\\n    function priceMin(string calldata symbol) external view returns (uint256);\\n\\n    function priceMax(string calldata symbol) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x164c8759ca5a8e39bbe1de6b2504098c543b2f15663c9d452e083418f8313f48\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"pragma solidity 0.5.11;\\n\\ninterface IPriceOracle {\\n    /**\\n     * @dev returns the asset price in USD, 6 decimal digits.\\n     * Compatible with the Open Price Feed.\\n     */\\n    function price(string calldata symbol) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x943aaa48eecafcbe186d21d3e4d7a2dbe356e45611b4d9794f0df63ba9abdec7\"},\"contracts/mocks/MockOracle.sol\":{\"content\":\"pragma solidity 0.5.11;\\n\\nimport \\\"../interfaces/IPriceOracle.sol\\\";\\nimport \\\"../interfaces/IMinMaxOracle.sol\\\";\\n\\n/**\\n * Mock of both price Oracle and min max oracles\\n */\\ncontract MockOracle is IPriceOracle, IMinMaxOracle {\\n    mapping(bytes32 => uint256) prices;\\n    mapping(bytes32 => uint256[]) pricesMinMax;\\n    uint256 ethMin;\\n    uint256 ethMax;\\n\\n    /**\\n     * @dev returns the asset price in USD, 6 decimal digits.\\n     * Compatible with the Open Price Feed.\\n     */\\n    function price(string calldata symbol) external view returns (uint256) {\\n        return prices[keccak256(abi.encodePacked(symbol))];\\n    }\\n\\n    /**\\n     * @dev sets the price of the asset in USD, 6 decimal digits\\n     *\\n     */\\n    function setPrice(string calldata symbol, uint256 _price) external {\\n        prices[keccak256(abi.encodePacked(symbol))] = _price;\\n    }\\n\\n    /**\\n     * @dev sets the min and max price of ETH in USD, 6 decimal digits\\n     *\\n     */\\n    function setEthPriceMinMax(uint256 _min, uint256 _max) external {\\n        ethMin = _min;\\n        ethMax = _max;\\n    }\\n\\n    /**\\n     * @dev sets the prices Min Max for a specific symbol in ETH, 8 decimal digits\\n     *\\n     */\\n    function setTokPriceMinMax(\\n        string calldata symbol,\\n        uint256 _min,\\n        uint256 _max\\n    ) external {\\n        pricesMinMax[keccak256(abi.encodePacked(symbol))] = [_min, _max];\\n    }\\n\\n    /**\\n     * @dev get the price of asset in ETH, 8 decimal digits.\\n     */\\n    function priceMin(string calldata symbol) external view returns (uint256) {\\n        uint256[] storage pMinMax = pricesMinMax[keccak256(\\n            abi.encodePacked(symbol)\\n        )];\\n        return (pMinMax[0] * ethMin) / 1e6;\\n    }\\n\\n    /**\\n     * @dev get the price of asset in USD, 8 decimal digits.\\n     * Not needed for now\\n     */\\n    function priceMax(string calldata symbol) external view returns (uint256) {\\n        uint256[] storage pMinMax = pricesMinMax[keccak256(\\n            abi.encodePacked(symbol)\\n        )];\\n        return (pMinMax[1] * ethMax) / 1e6;\\n    }\\n}\\n\",\"keccak256\":\"0x79c8cc814946d79a0dd49941ae6cba8320c5ffa8d9d2be72d7871df827e1841d\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610547806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806319af6bf01461006757806322e01192146100e7578063665c9f891461015757806369a5cc53146101cb5780637bf0c215146101ee578063fe2c61981461025c575b600080fd5b6100d56004803603602081101561007d57600080fd5b810190602081018135600160201b81111561009757600080fd5b8201836020820111156100a957600080fd5b803590602001918460018302840111600160201b831117156100ca57600080fd5b5090925090506102ca565b60408051918252519081900360200190f35b610155600480360360408110156100fd57600080fd5b810190602081018135600160201b81111561011757600080fd5b82018360208201111561012957600080fd5b803590602001918460018302840111600160201b8311171561014a57600080fd5b919350915035610341565b005b6101556004803603606081101561016d57600080fd5b810190602081018135600160201b81111561018757600080fd5b82018360208201111561019957600080fd5b803590602001918460018302840111600160201b831117156101ba57600080fd5b91935091508035906020013561038c565b610155600480360360408110156101e157600080fd5b50803590602001356103f8565b6100d56004803603602081101561020457600080fd5b810190602081018135600160201b81111561021e57600080fd5b82018360208201111561023057600080fd5b803590602001918460018302840111600160201b8311171561025157600080fd5b509092509050610403565b6100d56004803603602081101561027257600080fd5b810190602081018135600160201b81111561028c57600080fd5b82018360208201111561029e57600080fd5b803590602001918460018302840111600160201b831117156102bf57600080fd5b50909250905061045e565b6000806001600085856040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209050620f42406002548260008154811061032557fe5b9060005260206000200154028161033857fe5b04949350505050565b80600080858560405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120815260200190815260200160002081905550505050565b6040518060400160405280838152602001828152506001600086866040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209060026103f19291906104aa565b5050505050565b600291909155600355565b6000806001600085856040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209050620f42406003548260018154811061032557fe5b6000806000848460405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120815260200190815260200160002054905092915050565b8280548282559060005260206000209081019282156104e5579160200282015b828111156104e55782518255916020019190600101906104ca565b506104f19291506104f5565b5090565b61050f91905b808211156104f157600081556001016104fb565b9056fea265627a7a72315820354aaa7c500d1ab9644c4957dd74dcf53824d0952dd64e768873fd4bc83cc09964736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806319af6bf01461006757806322e01192146100e7578063665c9f891461015757806369a5cc53146101cb5780637bf0c215146101ee578063fe2c61981461025c575b600080fd5b6100d56004803603602081101561007d57600080fd5b810190602081018135600160201b81111561009757600080fd5b8201836020820111156100a957600080fd5b803590602001918460018302840111600160201b831117156100ca57600080fd5b5090925090506102ca565b60408051918252519081900360200190f35b610155600480360360408110156100fd57600080fd5b810190602081018135600160201b81111561011757600080fd5b82018360208201111561012957600080fd5b803590602001918460018302840111600160201b8311171561014a57600080fd5b919350915035610341565b005b6101556004803603606081101561016d57600080fd5b810190602081018135600160201b81111561018757600080fd5b82018360208201111561019957600080fd5b803590602001918460018302840111600160201b831117156101ba57600080fd5b91935091508035906020013561038c565b610155600480360360408110156101e157600080fd5b50803590602001356103f8565b6100d56004803603602081101561020457600080fd5b810190602081018135600160201b81111561021e57600080fd5b82018360208201111561023057600080fd5b803590602001918460018302840111600160201b8311171561025157600080fd5b509092509050610403565b6100d56004803603602081101561027257600080fd5b810190602081018135600160201b81111561028c57600080fd5b82018360208201111561029e57600080fd5b803590602001918460018302840111600160201b831117156102bf57600080fd5b50909250905061045e565b6000806001600085856040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209050620f42406002548260008154811061032557fe5b9060005260206000200154028161033857fe5b04949350505050565b80600080858560405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120815260200190815260200160002081905550505050565b6040518060400160405280838152602001828152506001600086866040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209060026103f19291906104aa565b5050505050565b600291909155600355565b6000806001600085856040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012081526020019081526020016000209050620f42406003548260018154811061032557fe5b6000806000848460405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120815260200190815260200160002054905092915050565b8280548282559060005260206000209081019282156104e5579160200282015b828111156104e55782518255916020019190600101906104ca565b506104f19291506104f5565b5090565b61050f91905b808211156104f157600081556001016104fb565b9056fea265627a7a72315820354aaa7c500d1ab9644c4957dd74dcf53824d0952dd64e768873fd4bc83cc09964736f6c634300050b0032",
  "devdoc": {
    "methods": {
      "price(string)": {
        "details": "returns the asset price in USD, 6 decimal digits. Compatible with the Open Price Feed."
      },
      "priceMax(string)": {
        "details": "get the price of asset in USD, 8 decimal digits. Not needed for now"
      },
      "priceMin(string)": {
        "details": "get the price of asset in ETH, 8 decimal digits."
      },
      "setEthPriceMinMax(uint256,uint256)": {
        "details": "sets the min and max price of ETH in USD, 6 decimal digits     "
      },
      "setPrice(string,uint256)": {
        "details": "sets the price of the asset in USD, 6 decimal digits     "
      },
      "setTokPriceMinMax(string,uint256,uint256)": {
        "details": "sets the prices Min Max for a specific symbol in ETH, 8 decimal digits     "
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "Mock of both price Oracle and min max oracles"
  }
}